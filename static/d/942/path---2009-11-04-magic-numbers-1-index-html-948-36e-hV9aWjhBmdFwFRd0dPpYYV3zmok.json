{"data":{"site":{"siteMetadata":{"title":"A Blog","author":"Scott Williams"}},"markdownRemark":{"id":"94801bb0-737e-5d4f-b0bc-96545cb1d34b","excerpt":"","html":"<div><div><div><div><div>In programming, it is generally a good idea to avoid \"magic numbers\" meaning a number that could change with requirements:<p></p>\n<div>if (foo &lt; 3) { do something }</div> <p></p>\n<div>That 3 could change, or it's meaning could be lost. A good practice is to define a variable for that magic number with an intelligent name (and possibly store the number in some configuration).</div> <p></p>\n<div>const int maxWidgets = 3;</div>\n<div>if (foo &lt; maxWidgets) { do something }<p></p> </div>\n<div>I did recently see a bit of code that got the concept, but failed in the execution:</div>\n<p></p>\n<div>const int THREE = 3;</div> <div>if (foo &lt; THREE) { do something }</div>\n<p></p>\n<div>It is possible that the maximum number of widgets might change to 10. Then you're stuck with this brilliant bit of code:</div> <p></p>\n<div>const int THREE = 10;</div>\n<p></p>\n<div>Uh oh.Â </div>\n</div></div></div></div></div>","frontmatter":{"title":"Magic Numbers","date":"November 04, 2009"}}},"pageContext":{"slug":"/2009/11/04/magic-numbers-1/index.html/","previous":{"fields":{"slug":"/2009/11/03/on-dreamweaver-and-other-magic-html-editors/index.html/"},"frontmatter":{"title":"On Dreamweaver (and other 'magic' HTML editors)"}},"next":{"fields":{"slug":"/2009/11/06/time-for-your-easy-joke-about-courtney-love/index.html/"},"frontmatter":{"title":"Time for Your Easy Joke About Courtney Love"}}}}