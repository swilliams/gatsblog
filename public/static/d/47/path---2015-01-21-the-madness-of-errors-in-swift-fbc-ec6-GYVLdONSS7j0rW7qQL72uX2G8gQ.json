{"data":{"site":{"siteMetadata":{"title":"A Blog","author":"Scott Williams"}},"markdownRemark":{"id":"3d4e8b6a-ab8f-51a8-8747-87905af1791f","excerpt":"Let’s take a common scenario. You are making an HTTP request and are checking the response for an error. If there is one, you’d like to post a notification and…","html":"<p>Let’s take a common scenario. You are making an HTTP request and are checking the response for an error. If there is one, you’d like to post a notification and let some error handler deal with it. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">        Alamofire.request(.GET, someURL).response { (request, response, data, error) in\n            if error != nil {\n                let userInfo = [&quot;error&quot;: error]\n                let nc = NSNotificationCenter.defaultCenter()\n                nc.postNotificationName(&quot;HTTPERROR&quot;, object: nil, userInfo: userInfo)\n            }\n        }</code></pre></div>\n<p>Uh oh, there’s a compiler error on the <code class=\"language-text\">userInfo</code> argument with the message “Extra argument ‘userInfo’ in call”. Huh? <a href=\"https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSNotificationCenter_Class/index.html#//apple_ref/occ/instm/NSNotificationCenter/postNotificationName:object:userInfo:\"><code class=\"language-text\">postNotificationName</code> definitely allows for a <code class=\"language-text\">userInfo</code> parameter</a>. Maybe it’s a hidden typing error? According to the docs <code class=\"language-text\">userInfo</code> is supposed to be an optional dictionary like of type: <code class=\"language-text\">[NSObject : AnyObject]</code>. My key is a String which is bridged from <code class=\"language-text\">NSString</code>, which is an <code class=\"language-text\">NSObject</code> and <code class=\"language-text\">NSError</code> is also an <code class=\"language-text\">AnyObject</code>, so what gives? </p>\n<figure class=\"center\">\n    <img alt=\"Lying\" src=\"/images/assets/xcode-lying-cat.jpg\">\n    <figcaption></figcaption>\n</figure>\n<p>After banging my head on the wall for a while I remembered that the <code class=\"language-text\">error</code> variable from <a href=\"https://github.com/Alamofire/Alamofire\">AlamoFire</a> is an optional. Therefore, the correct declaration for <code class=\"language-text\">userInfo</code> is to unwrap the error:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let userInfo = [&quot;error&quot;: error!]</code></pre></div>\n<p>And voilà, no more compilation errors. </p>\n<p>“Extra argument ‘userInfo’ in call” is a crappy error message. The proper one should have been something about values in the <code class=\"language-text\">userInfo</code> dictionary not being optional.</p>\n<p>Swift is full of these unfortunately. Between these and your friendly SourceKit crashes it’s getting untenable. My wish for 2015 is for Apple to address these shortcomings.</p>","frontmatter":{"title":"The Madness of Errors in Swift","date":"January 22, 2015"}}},"pageContext":{"slug":"/2015/01/21/the-madness-of-errors-in-swift/","previous":{"fields":{"slug":"/2014/12/29/o-christmas-roast/"},"frontmatter":{"title":"O Christmas Roast"}},"next":{"fields":{"slug":"/2015/01/27/surface-marketing/"},"frontmatter":{"title":"Surface Marketing"}}}}