{"data":{"site":{"siteMetadata":{"title":"A Blog","author":"Scott Williams"}},"markdownRemark":{"id":"38ae9c61-6782-5c62-8f69-4025df7a02d9","excerpt":"UITextView’s  can automatically detect URLs and treat them accordingly. This is a  nice  feature, but when you start to customize your UI, you might run into…","html":"<p><a href=\"http://developer.apple.com/library/ios/#documentation/uikit/reference/uitextview_class/Reference/UITextView.html\">UITextView’s</a> can automatically detect URLs and treat them accordingly. This is a <em>nice</em> feature, but when you start to customize your UI, you might run into this situation:</p>\n<figure>\n    <img alt=\"eww\" src=\"/images/assets/badpopover.png\">\n    <figcaption>Ewwwwww</figcaption>\n</figure>\n<p>That contrast between the background and foreground colors makes it pretty hard to read. A quick poke through the docs and on <a href=\"http://stackoverflow.com/questions/1350423/can-i-change-the-color-of-auto-detected-links-on-uitextview\">StackOverflow</a> reveals that there isn’t any way to change the color of the link, without resorting to <a href=\"http://stackoverflow.com/a/17294355/736\">private API’s</a>.</p>\n<p>Sooo, the best course of action is to just knuckle down and use a UIWebView to display what you want.</p>\n<p>To try to keep things relatively sane, I first added a static <code class=\"language-text\">html</code> file to my project with this content:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style language-css\">\n     <span class=\"token selector\">html, body, div</span> <span class=\"token punctuation\">{</span>\n         <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #3D3D3D<span class=\"token punctuation\">;</span>\n         <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> HelveticaNeue-Medium, Helvetica<span class=\"token punctuation\">;</span>\n         <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 12pt<span class=\"token punctuation\">;</span>\n         <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #FAFAF1<span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n    \n     <span class=\"token selector\">a</span> <span class=\"token punctuation\">{</span>\n         <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #FAFAF1<span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n      REPLACEME\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>The CSS code is inlined in the file. There’s probably a way to keep it separate and inject it, but I didn’t need anything fancier than this.</p>\n<p>Loading it was pretty straightforward:</p>\n<div class=\"gatsby-highlight\" data-language=\"objc\"><pre class=\"language-objc\"><code class=\"language-objc\">+ (NSString *)htmlTemplate {\n  NSString *path = [[NSBundle mainBundle] pathForResource:@&quot;html-template&quot; ofType:@&quot;html&quot;];\n  return [NSString stringWithContentsOfFile:path encoding:NSUTF8StringEncoding error:nil];\n}</code></pre></div>\n<p>Then on my controller I called this method from <code class=\"language-text\">viewDidLoad</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"objc\"><pre class=\"language-objc\"><code class=\"language-objc\">- (void)setContentText:(NSString *)contentText {\n  NSString *template = [SNDThemeManager attributionTemplate];\n  NSString *htmlText = [template stringByReplacingOccurrencesOfString:@&quot;REPLACEME&quot; withString:contentText];\n  [contentView loadHTMLString:htmlText baseURL:nil];\n}</code></pre></div>\n<p><code class=\"language-text\">contentView</code> is the <code class=\"language-text\">UIWebView</code>. Almost done. If you tap on a link in the webview it’ll open that link in itself, which might not be what you want. The way around it is to set your controller to be a <code class=\"language-text\">UIWebViewDelegate</code> and implement <a href=\"http://stackoverflow.com/a/2899793/736\">this method</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"objc\"><pre class=\"language-objc\"><code class=\"language-objc\">- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType {\n    if (navigationType == UIWebViewNavigationTypeLinkClicked) {\n        [[UIApplication sharedApplication] openURL:[request URL]];\n        return NO;\n    }\n    return YES;\n}</code></pre></div>\n<p>That’ll open it in Safari. If you want other browsers, well, knock yourself out. This is pretty much a giant mess for something that should be easy, but it’s just something that would have to be done if you want total control over the UI. The end result looks well enough:</p>\n<figure>\n    <img alt=\"Yay!\" src=\"/images/assets/goodpopover.png\">\n    <figcaption>Yay!</figcaption>\n</figure>","frontmatter":{"title":"Customizing the Link Color in a UITextView","date":"August 07, 2013"}}},"pageContext":{"slug":"/2013/08/07/customizing-the-link-color-in-a-uitextview/","previous":null,"next":{"fields":{"slug":"/2013/09/04/you-probably-shouldnt-buy-a-dslr/"},"frontmatter":{"title":"You Probably Shouldn't Buy a DSLR"}}}}