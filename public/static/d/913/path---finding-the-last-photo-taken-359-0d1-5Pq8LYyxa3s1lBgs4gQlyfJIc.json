{"data":{"site":{"siteMetadata":{"title":"A Blog","author":"Scott Williams"}},"markdownRemark":{"id":"87e5d645-8fc1-54bc-8fe5-114854fb4c93","excerpt":"Getting the last photo taken is a convenient feature to have in your app when dealing with photo picking. Prior to iOS 8, you could get it by using the  Assets…","html":"<p>Getting the last photo taken is a convenient feature to have in your app when dealing with photo picking. Prior to iOS 8, you could get it by using the <a href=\"https://developer.apple.com/library/ios/documentation/AssetsLibrary/Reference/AssetsLibraryFramework/index.html#//apple_ref/doc/uid/TP40009730\">Assets Library Framework</a> and then <a href=\"http://stackoverflow.com/a/10200857/736\">looping through the various groups</a> to get the right photo.</p>\n<p>In iOS 8, the Asset Library is still available, but Apple introduced a new framework to go along with <a href=\"http://www.apple.com/osx/photos/\">Photos.app</a>. It’s creatively called the <a href=\"https://developer.apple.com/library/ios/documentation/Photos/Reference/Photos_Framework/index.html#//apple_ref/doc/uid/TP40014408\">Photos Framework</a> and it makes certain things, such as querying for the recent image much easier. To further entice you to use it, the Assets Library is deprecated in iOS 9.</p>\n<p>Here’s a function that’ll get the most recent photo with the Photos Framework:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">import</span> <span class=\"token builtin\">UIKit</span>\n<span class=\"token keyword\">import</span> <span class=\"token builtin\">Photos</span>\n\n<span class=\"token comment\">// I like to typealias my blocks, makes for easier reading</span>\n<span class=\"token keyword\">typealias</span> <span class=\"token builtin\">ImageCallback</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">UIImage</span><span class=\"token operator\">?</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Void</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">fetchLastPhoto</span><span class=\"token punctuation\">(</span>resizeTo size<span class=\"token punctuation\">:</span> <span class=\"token builtin\">CGSize</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> imageCallback<span class=\"token punctuation\">:</span> <span class=\"token builtin\">ImageCallback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> fetchOptions <span class=\"token operator\">=</span> <span class=\"token function\">PHFetchOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    fetchOptions<span class=\"token punctuation\">.</span>sortDescriptors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token function\">NSSortDescriptor</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"creationDate\"</span><span class=\"token punctuation\">,</span> ascending<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    \n<span class=\"token comment\">//        fetchOptions.fetchLimit = 1 // Available in iOS 9</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> fetchResult <span class=\"token operator\">=</span> <span class=\"token builtin\">PHAsset</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchAssetsWithMediaType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">Image</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">:</span> fetchOptions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> asset <span class=\"token operator\">=</span> fetchResult<span class=\"token punctuation\">.</span>firstObject <span class=\"token keyword\">as</span><span class=\"token operator\">?</span> <span class=\"token builtin\">PHAsset</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">let</span> manager <span class=\"token operator\">=</span> <span class=\"token builtin\">PHImageManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">defaultManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">let</span> targetSize <span class=\"token operator\">=</span> size <span class=\"token operator\">==</span> <span class=\"token constant\">nil</span> <span class=\"token operator\">?</span> <span class=\"token function\">CGSize</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">:</span> asset<span class=\"token punctuation\">.</span>pixelWidth<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> asset<span class=\"token punctuation\">.</span>pixelHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> size<span class=\"token operator\">!</span>\n            manager<span class=\"token punctuation\">.</span><span class=\"token function\">requestImageForAsset</span><span class=\"token punctuation\">(</span>asset<span class=\"token punctuation\">,</span>\n                targetSize<span class=\"token punctuation\">:</span> targetSize<span class=\"token punctuation\">,</span>\n                contentMode<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span><span class=\"token builtin\">AspectFit</span><span class=\"token punctuation\">,</span>\n                options<span class=\"token punctuation\">:</span> <span class=\"token constant\">nil</span><span class=\"token punctuation\">,</span>\n                resultHandler<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> image<span class=\"token punctuation\">,</span> info <span class=\"token keyword\">in</span>\n                <span class=\"token function\">imageCallback</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">imageCallback</span><span class=\"token punctuation\">(</span><span class=\"token constant\">nil</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>There’s a fair amount going on in there. First, we create a <a href=\"https://developer.apple.com/library/prerelease/ios/documentation/Photos/Reference/PHFetchOptions_Class/index.html#//apple_ref/occ/cl/PHFetchOptions\"><code class=\"language-text\">PHFetchOptions</code></a> object which we can use to pass in additional information to filter the query. In this case we only need to sort by <code class=\"language-text\">creationDate</code> descending. iOS 9 introduces <code class=\"language-text\">fetchLimit</code> which could reduce a bit of overhead since we know we only need 1 image.</p>\n<p><code class=\"language-text\">PHFetchOptions</code> also has a <code class=\"language-text\">predicate</code> property that has a bunch of interesting capabilities, such as restricting the search to specific <code class=\"language-text\">mediaSubtypes</code> like <code class=\"language-text\">PhotoHDR</code> or <code class=\"language-text\">PhotoPanorama</code>. If you want all photos just ignore it; that’s determined later. Do note that <em>“Photos does not support predicates created with the <code class=\"language-text\">predicateWithBlock:</code> method.”</em>.</p>\n<p>Once we have our options we are ready to query. The Photos Framework gives you access to 3 types of things that are stored in Photos.app: <code class=\"language-text\">PHAsset</code>, <code class=\"language-text\">PHAssetCollection</code>, and <code class=\"language-text\">PHCollectionList</code>. We only care about <a href=\"https://developer.apple.com/library/prerelease/ios/documentation/Photos/Reference/PHAsset_Class/index.html#//apple_ref/occ/cl/PHAsset\"><code class=\"language-text\">PHAsset</code></a> right now. A <code class=\"language-text\">PHAsset</code> is a representation of the media stored on the device (photo or video). The other two are ways to group those assets in general.</p>\n<p>Querying happens through class-level methods on the <code class=\"language-text\">PHAsset</code> class. There are <a href=\"https://developer.apple.com/library/prerelease/ios/documentation/Photos/Reference/PHAsset_Class/index.html#//apple_ref/doc/uid/TP40014383-CH1-SW2\">a few to choose from</a>, but we want <code class=\"language-text\">fetchAssetsWithMediaType:options:</code>. This returns a <a href=\"https://developer.apple.com/library/prerelease/ios/documentation/Photos/Reference/PHFetchResult_Class/index.html#//apple_ref/occ/cl/PHFetchResult\"><code class=\"language-text\">PHFetchResult</code></a> which is kinda like an <code class=\"language-text\">NSArray</code>, but not exactly. In Swift it’s filled with optional <code class=\"language-text\">AnyObject</code>s. The first one should be the most recently created file so we cast it to a <code class=\"language-text\">PHAsset</code>.</p>\n<p>Now comes the time to convert that <code class=\"language-text\">PHAsset</code> into what we really want: a <code class=\"language-text\">UIImage</code>. This is the responsibility of <a href=\"https://developer.apple.com/library/prerelease/ios/documentation/Photos/Reference/PHImageManager_Class/index.html#//apple_ref/occ/cl/PHImageManager\"><code class=\"language-text\">PHImageManager</code></a>. </p>\n<p>Most of the time when querying for images, we just want to resize the photo to fit into a <code class=\"language-text\">UIImageView</code> so Photos does most of the heavy lifting for you. Give it the size you want and a couple other options and off it will go. This happens asynchronously, so hand off the results to your callback block when it’s done. This’d be especially handy for generating a bunch of thumbnails.</p>\n<p>Photos gives you quite a bit of flexability. We didn’t touch on how it helps you to edit assets, manage/query video, or observe changes to photos. I wasn’t aware of this framework until today, but it looks like a powerful one worth getting to know if you do anything with the images on your device.</p>","frontmatter":{"title":"Finding the Last Photo Taken","date":"August 10, 2015"}}},"pageContext":{"slug":"/finding-the-last-photo-taken/","previous":{"fields":{"slug":"/great-moments-in-customer-service/"},"frontmatter":{"title":"Great Moments in Customer Service"}},"next":{"fields":{"slug":"/the-good-the-bad-and-the-ugly-with-the-apple-tv/"},"frontmatter":{"title":"The Good, the Bad, and the Ugly with the Apple TV"}}}}