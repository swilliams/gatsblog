{"data":{"site":{"siteMetadata":{"title":"A Blog","author":"Scott Williams"}},"markdownRemark":{"id":"5d54b146-7086-57a1-bdfd-32b57bd09eee","excerpt":"Here’s a quickie. In Swift, the default  accessor  for strcutures is  , meaning that it is available to everything else within the module. You can change this…","html":"<p>Here’s a quickie. In Swift, the default <a href=\"https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/AccessControl.html\">accessor</a> for strcutures is <code class=\"language-text\">internal</code>, meaning that it is available to everything else within the module. You can change this by adding <code class=\"language-text\">private</code> or <code class=\"language-text\">public</code> in front of them like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Foo</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">private</code> means that the construct is only available within the same file. I just “discovered”<sup id=\"fnref:1\"><a href=\"#fn:1\" rel=\"footnote\">1</a></sup> that you can also mark an <a href=\"https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Extensions.html\">Extension</a> as <code class=\"language-text\">private</code>, which I hadn’t considered before. This let’s you add functionality to a struct or class that may be useful in the current context of everything within that same file, but doesn’t make sense elsewhere.</p>\n<p>For example, in a <a href=\"https://developer.apple.com/healthkit/\">HealthKit</a> project you may be only dealing with fluid ounces for an <code class=\"language-text\">HKQuantitySample</code> and converting all the time is a bit of a pain. You don’t necessarily want to make a <code class=\"language-text\">quantityInOunces</code> computed variable  available on the whole app, but in a specific file where you’re computed all those ounces, it makes sense.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">extension</span> <span class=\"token builtin\">HKQuantitySample</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">var</span> quantityInOunces<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Double</span><span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* blah */</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HealthKitManager</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">func</span> <span class=\"token function\">doStuff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// Calculate a bunch of ounces easy peasy.</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"footnotes\">\n  <ol>\n    <li class=\"footnote\" id=\"fn:1\">\n  <p>Couldn't think of a better word, but yeah I'm regular Vasco de Gama.</p>\n</li>\n  </ol>\n</div>","frontmatter":{"title":"Private Extensions in Swift","date":"December 11, 2015"}}},"pageContext":{"slug":"/private-extensions-in-swift/","previous":{"fields":{"slug":"/the-good-the-bad-and-the-ugly-with-the-apple-tv/"},"frontmatter":{"title":"The Good, the Bad, and the Ugly with the Apple TV"}},"next":{"fields":{"slug":"/combining-if-let-and-where-in-swift/"},"frontmatter":{"title":"Combining if let and where in Swift"}}}}