{"data":{"site":{"siteMetadata":{"title":"A Blog","author":"Scott Williams"}},"markdownRemark":{"id":"7821c786-f534-5197-ac1e-5ffaca7c842e","excerpt":"In the interest of security I’ve started to turn on  Two Factor Authentication  (aka 2FA) for some of the services I use. I tried it out with GitHub about a…","html":"<p>In the interest of security I’ve started to turn on <a href=\"http://en.wikipedia.org/wiki/Multi-factor_authentication\">Two Factor Authentication</a> (aka 2FA) for some of the services I use. I tried it out with GitHub about a year ago, but turned it off shortly thereafter because I encountered a bunch of problems and didn’t have the time to figure them all out. That and <a href=\"https://support.google.com/accounts/answer/3376859?hl=en\">Google’s Authenticator app having data loss issues after an update</a> was a big red flag too.</p>\n<p>Today it’s a little easier to manage. <a href=\"https://itunes.apple.com/us/app/1password-password-manager/id443987910?mt=12&#x26;at=11lxUn\">1Password</a> has 2FA support built in now, and there’s also <a href=\"https://itunes.apple.com/us/app/duo-mobile/id422663827?mt=8&#x26;at=11lxUn\">Duo Mobile’s app</a>. Turning it on was pretty easy: Go to the <a href=\"https://github.com/settings/security\">security</a> page, click a few buttons, and follow instructions. Once it was enabled I decided to push some changes for a project, and then this happened:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt; git push origin master\nremote: Invalid username or password.\nfatal: Authentication failed for &#39;https://github.com/swilliams/my-repo.git/&#39;</code></pre></div>\n<p>Umm, ok. I mean, I guess the most secure repository is one that <strong>nobody</strong> can access.</p>\n<p>The solution isn’t immediately obvious. I looked at <a href=\"https://help.github.com/articles/caching-your-github-password-in-git/\">GitHub’s setup docs</a> again, but they didn’t mention anything about 2FA. When in doubt, try it again right? This time I got a username/password prompt. I had assumed I would get some sort of additional prompt to enter a single use code for the 2FA, so I pasted in my GitHub password. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt; git push origin master\nUsername for &#39;https://github.com&#39;: swilliams\nPassword for &#39;https://swilliams@github.com&#39;:\nremote: Invalid username or password.\nfatal: Authentication failed for &#39;https://github.com/swilliams/my-repo.git/&#39;</code></pre></div>\n<p>No dice.</p>\n<p>Googling around a bit finally brought me to <a href=\"https://help.github.com/articles/creating-an-access-token-for-command-line-use/\">this page, “Creating an access token for command-line use”</a>. When you enable 2FA you need to use a token as your password for the Terminal. I created this with the default scopes provided<sup id=\"fnref:1\"><a href=\"#fn:1\" rel=\"footnote\">1</a></sup>, then copy/pasted the resulting token into the password prompt in my Terminal window.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">± git push origin master\nUsername for &#39;https://github.com&#39;: swilliams\nPassword for &#39;https://swilliams@github.com&#39;:\nCounting objects: 80, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (78/78), done.\nWriting objects: 100% (80/80), 9.02 KiB | 0 bytes/s, done.\nTotal 80 (delta 58), reused 0 (delta 0)\nTo https://github.com/swilliams/my-repo.git\n   01efb2c..445a0b6  master -&gt; master</code></pre></div>\n<p>Yay!</p>\n<p>I <em>think</em> that should handle all the headaches for 2FA with GitHub. I like the warm security feeling it brings, and it seems like the user experience has been cleared up too.</p>\n<div class=\"footnotes\">\n  <ol>\n    <li class=\"footnote\" id=\"fn:1\">\n  <p>For standard git operations, I don't think you would need any of the other scopes available for apps, and you could probably remove <pre>gist</pre> from it too.</p>\n</li>\n  </ol>\n</div>","frontmatter":{"title":"Two Factor Authentication for GitHub","date":"April 01, 2015"}}},"pageContext":{"slug":"/2015/04/01/two-factor-authentication-for-github/","previous":{"fields":{"slug":"/2015/03/31/tracking-down-an-exc-bad-access-with-swift/"},"frontmatter":{"title":"Tracking Down an EXC_BAD_ACCESS in Swift"}},"next":{"fields":{"slug":"/2015/04/02/retroactively-creating-a-core-data-migration/"},"frontmatter":{"title":"Retroactively Creating a Core Data Migration"}}}}