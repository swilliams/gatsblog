{"data":{"site":{"siteMetadata":{"title":"A Blog","author":"Scott Williams"}},"markdownRemark":{"id":"25d21e3b-9bdc-5a96-bf91-689073a4d87f","excerpt":"What I like about Swift is that it feels like a natural progression when learning more of the language’s features. Case in point: I’ve known about the   keyword…","html":"<p>What I like about Swift is that it feels like a natural progression when learning more of the language’s features. Case in point: I’ve known about the <code class=\"language-text\">where</code> keyword for a while, and have used it plenty of times before, but just found this little ditty:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> someBool <span class=\"token operator\">=</span> someThing<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>someBool <span class=\"token keyword\">where</span> someBool <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// do stuff if someBool is true</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>That will only execute the body of the statement if <code class=\"language-text\">someThing</code> is not nil and <code class=\"language-text\">someBool</code> is true. Before, I had thought that would’ve been two separate statements, and extra indenting. Kinda cool.</p>","frontmatter":{"title":"Test page","date":"May 05, 2016"}}},"pageContext":{"slug":"/2018/test-page/","previous":{"fields":{"slug":"/private-extensions-in-swift/"},"frontmatter":{"title":"Private Extensions in Swift"}},"next":{"fields":{"slug":"/combining-if-let-and-where-in-swift/"},"frontmatter":{"title":"Combining if let and where in Swift"}}}}